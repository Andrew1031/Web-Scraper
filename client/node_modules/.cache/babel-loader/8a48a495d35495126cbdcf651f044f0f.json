{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15102\\\\my_awesome_project\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {\n      apiResponse: \"\",\n      value: \"yassuo\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.URL = \"\";\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/server/\" + this.state.value).then(res => res.text()).then(res => this.setState({\n      apiResponse: res,\n      value: this.state.value\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  } //how does the backend route data? how does the frontend communicate with the backend \n  //how does the backend know what to do when you call /scrape/username? \n\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.URL = \"http://localhost:9000/server/\" + this.state.value;\n    alert(\"Value was entered: \" + this.state.value);\n    console.log(\"before\");\n    fetch(\"http://localhost:9000/server/\" + this.state.value, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => console.log(data)).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"OP.GG webscraper\"), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"submit_job\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Search: \", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchVal\",\n      type: \"text\",\n      value: this.state.value,\n      name: \"searchValue\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:9000/server/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }\n    }, this.state.value)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/15102/my_awesome_project/client/src/App.js"],"names":["React","Component","App","constructor","props","myChangeHandler","event","setState","value","target","state","apiResponse","onSubmit","bind","URL","callAPI","fetch","then","res","text","componentWillMount","preventDefault","alert","console","log","method","headers","data","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\", value: \"yassuo\"};\n    this.onSubmit = this.onSubmit.bind(this);\n    this.URL = \"\";\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/server/\" + this.state.value)\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res, value: this.state.value}));\n  }\n\n  componentWillMount() {\n      this.callAPI();\n  }\n\n  //how does the backend route data? how does the frontend communicate with the backend \n  //how does the backend know what to do when you call /scrape/username? \n  onSubmit(event) {\n    event.preventDefault();\n    this.URL = \"http://localhost:9000/server/\" + this.state.value;\n    alert(\"Value was entered: \" + this.state.value); \n    console.log(\"before\");\n    fetch(\"http://localhost:9000/server/\" + this.state.value, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    })\n    .then(data => console.log(data))\n    .catch(err => console.log(err))\n  }\n  \n  \n  myChangeHandler = (event) => {\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">OP.GG webscraper</h1>\n          <form id=\"submit_job\" onSubmit={this.onSubmit}>\n            <label>\n              Search: {\" \"}\n              <input id=\"searchVal\" type=\"text\" value={this.state.value} name=\"searchValue\" onChange={this.myChangeHandler}/>\n              <br></br>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </header>\n        <p className=\"App-intro\"><a href=\"http://localhost:9000/server/\">{this.state.value}</a></p>\n        </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}